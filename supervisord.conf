[supervisord]
logfile=/var/log/supervisord.log  ; (main log file;default $CWD/supervisord.log)
logfile_maxbytes=40MB       ; (max main logfile bytes b4 rotation;default 50MB)
logfile_backups=5          ; (num of main logfile rotation backups;default 10)
loglevel=info               ; (log level;default info; others: debug,warn,trace)
pidfile=/var/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
nodaemon=true              ; (start in foreground if true;default false)
minfds=1024                 ; (min. avail startup file descriptors;default 1024)
minprocs=200                ; (min. avail process descriptors;default 200)

;[program:theprogramname]
;command=/bin/cat              ; the program (relative uses PATH, can take args)
;process_name=%(program_name)s ; process_name expr (default %(program_name)s)
;numprocs=1                    ; number of processes copies to start (def 1)
;directory=/tmp                ; directory to cwd to before exec (def no cwd)
;umask=022                     ; umask for process (default None)
;priority=999                  ; the relative start priority (default 999)
;autostart=true                ; start at supervisord start (default: true)
;autorestart=true              ; retstart at unexpected quit (default: true)
;startsecs=10                  ; number of secs prog must stay running (def. 1)
;startretries=3                ; max # of serial start failures (default 3)
;exitcodes=0,2                 ; 'expected' exit codes for process (default 0,2)
;stopsignal=QUIT               ; signal used to kill process (default TERM)
;stopwaitsecs=10               ; max num secs to wait b4 SIGKILL (default 10)
;user=chrism                   ; setuid to this UNIX account to run the program
;redirect_stderr=true          ; redirect proc stderr to stdout (default false)
;stdout_logfile=/a/path        ; stdout log path, NONE for none; default AUTO
;stdout_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)
;stdout_logfile_backups=10     ; # of stdout logfile backups (default 10)
;stdout_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
;stdout_events_enabled=false   ; emit events on stdout writes (default false)
;stderr_logfile=/a/path        ; stderr log path, NONE for none; default AUTO
;stderr_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)
;stderr_logfile_backups=10     ; # of stderr logfile backups (default 10)
;stderr_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
;stderr_events_enabled=false   ; emit events on stderr writes (default false)
;environment=A=1,B=2           ; process environment additions (def no adds)
;serverurl=AUTO                ; override serverurl computation (childutils)

[program:zookeeper]
user=nobody
command=/opt/confluent/bin/zookeeper-server-start /opt/confluent/etc/kafka/zookeeper.properties
redirect_stderr=true
stdout_logfile=/var/log/zookeeper.log

[program:broker]
user=nobody
;environment=JMX_PORT=29393
command=/opt/confluent/bin/kafka-server-start /opt/confluent/etc/kafka/server.properties
redirect_stderr=true
stdout_logfile=/var/log/broker.log

[program:schema-registry]
user=nobody
command=/opt/confluent/bin/schema-registry-start /opt/confluent/etc/schema-registry/schema-registry.properties
redirect_stderr=true
stdout_logfile=/var/log/schema-registry.log
startretries=5

[program:rest-proxy]
user=nobody
command=/opt/confluent/bin/kafka-rest-start /opt/confluent/etc/kafka-rest/kafka-rest.properties
redirect_stderr=true
stdout_logfile=/var/log/rest-proxy.log
startretries=5

[program:connect-distributed]
user=nobody
environment=KAFKA_HEAP_OPTS=-Xmx{{CONNECT_HEAP}},CLASSPATH="/extra-connect-jars/*:/connectors/*"
command=/opt/confluent/bin/connect-distributed /opt/confluent/etc/schema-registry/connect-avro-distributed.properties
redirect_stderr=true
stdout_logfile=/var/log/connect-distributed.log
startretries=5

[program:caddy]
user=nobody
command=/opt/caddy/caddy -conf /usr/share/landoop/Caddyfile
redirect_stderr=true
stdout_logfile=/var/log/caddy.log

[program:smoke-tests]
;user=nobody ;; coyote needs to write 2 files: index.html and results
command=bash -c 'sleep 45 && /usr/local/bin/smoke-tests.sh'
redirect_stderr=true
stdout_logfile=/var/log/smoke-tests.log
autorestart=false
startretries=1

[program:logs-to-kafka]
user=nobody
command=bash -c 'sleep 60 && /usr/local/bin/logs-to-kafka.sh'
redirect_stderr=true
stdout_logfile=/var/log/logs-to-kafka.log
autorestart=false
startretries=1

; [program:kafka-manager]
; ;user=nobody
; environment=ZK_HOSTS="localhost:2181" ; Disabled because it doesn't work, so we take care of it inside Dockerfile by editing application.conf
; command=/opt/kafka-manager-1.3.2.1/bin/kafka-manager -Dconfig.file=/opt/kafka-manager-1.3.2.1/conf/application.conf -Dhttp.port=3031
; redirect_stderr=true
; stdout_logfile=/var/log/kafka-manager.log
; startretries=5

[include]
files = /etc/supervisord.d/*.conf
